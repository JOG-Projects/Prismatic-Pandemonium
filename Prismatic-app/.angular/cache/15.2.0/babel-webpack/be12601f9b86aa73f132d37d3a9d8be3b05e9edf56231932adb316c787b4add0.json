{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_img_74_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 21);\n  }\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"src\", card_r1, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class AppComponent {\n  constructor(title) {\n    this.deck = [\"../assets/blue0.png\", \"../assets/red12.png\", \"../assets/red5.png\", \"../assets/green0.png\", \"../assets/green1.png\", \"../assets/blue5.png\", \"../assets/yellow4.png\", \"../assets/blue5.png\", \"../assets/blue5.png\", \"../assets/blue5.png\", \"../assets/blue5.png\", \"../assets/blue5.png\", \"../assets/blue5.png\", \"../assets/blue5.png\", \"../assets/blue5.png\", \"../assets/blue5.png\"];\n    this.playPileDom = document.querySelector('.play-pile');\n    this.imgPreLoad = [];\n    this.preLoaded = false;\n    this.preLoadImgs = () => {\n      for (let i = 0; i <= 3; i++) {\n        let color;\n        if (i === 0) color = 'red';\n        if (i === 1) color = 'green';\n        if (i === 2) color = 'blue';\n        if (i === 3) color = 'yellow';\n        for (let n = 0; n <= 14; n++) {\n          let img = new Image();\n          img.src = '../assets/' + color + i + '.png';\n          imgPreLoad.push(img);\n        }\n      }\n    };\n    title.setTitle('Prismatic Pandemonium');\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Title));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 75,\n  vars: 1,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"IE=edge\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"player2-box\"], [1, \"player2-hand\", 2, \"margin-top\", \"10vh\"], [\"src\", \"../assets/back.png\", \"alt\", \"\"], [1, \"player2-hand\", 2, \"margin-top\", \"7vh\"], [1, \"play-area\"], [1, \"player2-hand\", 2, \"margin-bottom\", \"3vh\", \"margin-left\", \"260px\"], [1, \"play-pile\"], [\"src\", \"../assets/blue2.png\", \"alt\", \"\"], [1, \"draw-pile\", 2, \"margin-right\", \"17vh\"], [\"id\", \"draw-card\", \"src\", \"../assets/back.png\", \"alt\", \"\", 1, \"hidden\"], [1, \"player2-hand\", 2, \"margin-bottom\", \"3vh\", \"margin-right\", \"180px\"], [1, \"player78-box\", 2, \"display\", \"flex\", \"justify-content\", \"space-around\"], [1, \"player2-hand\", 2, \"margin-left\", \"-30vh\", \"margin-top\", \"3vh\"], [1, \"player2-hand\", 2, \"margin-right\", \"-38vh\", \"margin-top\", \"3vh\"], [1, \"player-box\"], [1, \"player-hand\"], [3, \"src\", 4, \"ngFor\", \"ngForOf\"], [3, \"src\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3);\n      i0.ɵɵelementStart(5, \"title\");\n      i0.ɵɵtext(6, \"Prismatic\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"body\")(8, \"div\", 4)(9, \"div\", 5);\n      i0.ɵɵelement(10, \"img\", 6)(11, \"img\", 6)(12, \"img\", 6)(13, \"img\", 6)(14, \"img\", 6)(15, \"img\", 6)(16, \"img\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 7);\n      i0.ɵɵelement(18, \"img\", 6)(19, \"img\", 6)(20, \"img\", 6)(21, \"img\", 6)(22, \"img\", 6)(23, \"img\", 6)(24, \"img\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 5);\n      i0.ɵɵelement(26, \"img\", 6)(27, \"img\", 6)(28, \"img\", 6)(29, \"img\", 6)(30, \"img\", 6)(31, \"img\", 6)(32, \"img\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 8)(34, \"div\", 9);\n      i0.ɵɵelement(35, \"img\", 6)(36, \"img\", 6)(37, \"img\", 6)(38, \"img\", 6)(39, \"img\", 6)(40, \"img\", 6)(41, \"img\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"div\", 10);\n      i0.ɵɵelement(43, \"img\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"div\", 12);\n      i0.ɵɵelement(45, \"img\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"img\", 13);\n      i0.ɵɵelementStart(47, \"div\", 14);\n      i0.ɵɵelement(48, \"img\", 6)(49, \"img\", 6)(50, \"img\", 6)(51, \"img\", 6)(52, \"img\", 6)(53, \"img\", 6)(54, \"img\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(55, \"div\", 15)(56, \"div\", 16);\n      i0.ɵɵelement(57, \"img\", 6)(58, \"img\", 6)(59, \"img\", 6)(60, \"img\", 6)(61, \"img\", 6)(62, \"img\", 6)(63, \"img\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"div\", 17);\n      i0.ɵɵelement(65, \"img\", 6)(66, \"img\", 6)(67, \"img\", 6)(68, \"img\", 6)(69, \"img\", 6)(70, \"img\", 6)(71, \"img\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(72, \"div\", 18)(73, \"div\", 19);\n      i0.ɵɵtemplate(74, AppComponent_img_74_Template, 1, 1, \"img\", 20);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(74);\n      i0.ɵɵproperty(\"ngForOf\", ctx.deck);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  encapsulation: 2\n});\nconst playPileDom = document.querySelector('.play-pile');\nconst playerHandDom = document.querySelector('.player-hand');\n// const botHandDom = document.querySelector('.player2-hand') fazer um bot\nconst cpuHand = [];\nlet playPile;\nlet cpuSCore = 0;\nlet playerScore = 0;\n// rodar o jogo\nlet playerTurn = true;\nlet gameOn = true;\n// let colorPickerIsOpen = false\nlet cpuDelay = Math.floor(Math.random() * cpuHand.length * 200 + 1500);\nlet gameOver = 100;\n//preload nas cartinha\nconst imgPreLoad = [];\nlet preLoaded = false;\nconst preLoadImgs = () => {\n  for (let i = 0; i <= 3; i++) {\n    let color;\n    if (i === 0) color = 'red';\n    if (i === 1) color = 'green';\n    if (i === 2) color = 'blue';\n    if (i === 3) color = 'yellow';\n    for (let n = 0; n <= 14; n++) {\n      let img = new Image();\n      img.src = '../assets/' + color + i + '.png';\n      imgPreLoad.push(img);\n    }\n  }\n  for (let i = 0; i < imgPreLoad.length; i++) {\n    playPileDom.appendChild(imgPreLoad[i]);\n    playPileDom.innerHTML = '';\n  }\n};\nclass Card {\n  constructor(rgb, value, points, changeTurn, drawValue, imgSrc) {\n    this.color = rgb;\n  }\n}","map":{"version":3,"mappings":"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","names":["i0","AppComponent","constructor","title","document","querySelector","i","color","n","img","Image","src","imgPreLoad","push","setTitle","selectors","decls","vars","consts","template","playPileDom","playerHandDom","cpuHand","playPile","cpuSCore","playerScore","playerTurn","gameOn","cpuDelay","Math","floor","random","length","gameOver","preLoaded","preLoadImgs","appendChild","innerHTML","Card","rgb","value","points","changeTurn","drawValue","imgSrc"],"sourceRoot":"","sources":["C:\\Users\\danie\\Documents\\Prismatic-Pandemonium\\Prismatic-app\\src\\app\\app.component.html","C:\\Users\\danie\\Documents\\Prismatic-Pandemonium\\Prismatic-app\\src\\app\\app.component.ts"],"sourcesContent":["<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Prismatic</title>\n</head>\n<body>\n  <div class=\"player2-box\">\n    <div class=\"player2-hand\" style=\"margin-top: 10vh;\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n    </div>\n    <div class=\"player2-hand\" style=\"margin-top: 7vh;\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n    </div>\n    <div class=\"player2-hand\" style=\"margin-top: 10vh;\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n    </div>\n  </div>\n  <div class=\"play-area\">\n    <!-- <div class=\"score\">\n      <p class=\"player2-titulo\">Alguma ideia de tabela com os pontinho<span id='player2-score'></span></p>\n      <div id='seperator'></div>\n      <p class=\"player-score-tittle\">Jogador 1 - <span id='player-score'>30</span></p>\n      <p class=\"rules\">Regras do jogo bulhufas / Round nº 1</p>\n    </div> -->\n    <div class=\"player2-hand\" style=\"margin-bottom: 3vh; margin-left: 260px;\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n    </div>\n    <div class=\"play-pile\">\n      <img src=\"../assets/blue2.png\" alt=\"\">\n    </div>\n    <div class=\"draw-pile\" style=\"margin-right: 17vh;\">\n      <img src=\"../assets/back.png\" alt=\"\">\n    </div>\n    <img id=\"draw-card\" class=\"hidden\" src=\"../assets/back.png\" alt=\"\">\n    <div class=\"player2-hand\" style=\"margin-bottom: 3vh; margin-right: 180px;\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n      <img src=\"../assets/back.png\" alt=\"\">\n    </div>\n  </div>\n  \n  <!-- <div class=\"end-of-round hidden\">\n    <p class=\"round\">X ganhou o round!</p>\n  </div>\n  <div class=\"end-of-game hidden\">\n    <p class=\"game\">X ganhou o round!</p>\n    <button class=\"play-again\">Jogar novamente!</button>\n  </div> -->\n    <div class=\"player78-box\" style=\"display: flex; justify-content: space-around;\">\n      <div class=\"player2-hand\" style=\"margin-left: -30vh; margin-top: 3vh;\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n      </div>\n      <div class=\"player2-hand\" style=\"margin-right: -38vh; margin-top: 3vh;\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n        <img src=\"../assets/back.png\" alt=\"\">\n      </div>\n    </div>\n  <div class=\"player-box\">\n    <div class=\"player-hand\">\n        <img *ngFor=\"let card of deck\" [src]=card>\n    </div>\n  </div>\n    <!-- <div class=\"color-picker\">\n      <p>Escolha uma cor:</p>\n      <div>\n        <button class=\"red\">Vermelho</button>\n        <button class=\"green\">Verde</button>\n        <button class=\"blue\">Azul</button>\n        <button class=\"yellow\">Amarelo</button>\n      </div>\n    </div> -->\n    <script src=\"\"></script>\n</body>\n</html>","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  constructor(\n    title: Title\n  ) {\n    title.setTitle('Prismatic Pandemonium')\n  }\n    deck = [\n    \"../assets/blue0.png\",\n    \"../assets/red12.png\",\n    \"../assets/red5.png\",\n    \"../assets/green0.png\",\n    \"../assets/green1.png\",\n    \"../assets/blue5.png\",\n    \"../assets/yellow4.png\",\n    \"../assets/blue5.png\",\n    \"../assets/blue5.png\",\n    \"../assets/blue5.png\",\n    \"../assets/blue5.png\",\n    \"../assets/blue5.png\",\n    \"../assets/blue5.png\",\n    \"../assets/blue5.png\",\n    \"../assets/blue5.png\",\n    \"../assets/blue5.png\",]\n\n    playPileDom = document.querySelector('.play-pile')\n\n    imgPreLoad = []\n    preLoaded = false\n\n    preLoadImgs = () => {\n    for(let i = 0; i <= 3; i++){\n      let color\n      if (i === 0) color = 'red'\n      if (i === 1) color = 'green'\n      if (i === 2) color = 'blue'\n      if (i === 3) color = 'yellow'\n      for (let n = 0; n <= 14; n++){\n        let img = new Image()\n        img.src = '../assets/' + color + i + '.png'\n        imgPreLoad.push(img)\n      }\n    }\n}\n    \n}\n\n\nconst playPileDom = document.querySelector('.play-pile')\n\nconst playerHandDom = document.querySelector('.player-hand')\n// const botHandDom = document.querySelector('.player2-hand') fazer um bot\n\nconst cpuHand = []\n\nlet playPile\nlet cpuSCore = 0\nlet playerScore = 0\n\n// rodar o jogo\nlet playerTurn = true\nlet gameOn = true\n// let colorPickerIsOpen = false\nlet cpuDelay = Math.floor((Math.random() * cpuHand.length * 200) + 1500)\nlet gameOver = 100\n\n\n//preload nas cartinha\n\nconst imgPreLoad = []\nlet preLoaded = false\n\nconst preLoadImgs = () => {\n  for(let i = 0; i <= 3; i++){\n    let color\n    if (i === 0) color = 'red'\n    if (i === 1) color = 'green'\n    if (i === 2) color = 'blue'\n    if (i === 3) color = 'yellow'\n    for (let n = 0; n <= 14; n++){\n      let img = new Image()\n      img.src = '../assets/' + color + i + '.png'\n      imgPreLoad.push(img)\n    }\n  }\n\n  for(let i = 0; i < imgPreLoad.length; i++){\n    playPileDom.appendChild(imgPreLoad[i])\n    playPileDom.innerHTML = ''\n  }\n}\n\nclass Card{\n  constructor(rgb, value, points, changeTurn, drawValue, imgSrc){\n    this.color = rgb\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}